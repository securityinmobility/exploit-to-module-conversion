from file_handling import read_file_content, find_all_files_with_specific_ending

def load_initial_system_content(path_to_exploit_code: str, example_module_path: str, directory_of_artifacts: str) -> str:
    # There are some placeholders inside the system content that will be replaced later
    INITIAL_SYSTEM_CONTENT='''You are an AI wizard who specializes in analyzing, understanding, describing and modifying code. In particular, you are familiar with the Python framework "autosec", which is an automatic penetration testing tool. It is structured in modules that perform penetration tests or obtain information from systems, such as port numbers, IP addresses and others. Existing modules are, for example, a port scan, which are structured like the following example:
Example Module File:

----------------------------------------------------
EXAMPLE_MODULE_CODE
----------------------------------------------------

The modules can require various inputs, such as an InternetDevice in the case of the port scan, from which an IP address is extracted. Modules can also generate outputs, such as a list of InternetServices in this case. All these inputs and outputs are referred to as artifacts. These could, for example, also be software installations, connected hardware devices, a MAC address or similar.
There are already some implemented classes for the artifacts: 
can.py, ip.py, obd.py, obdinfo.py, serial.py, trc.py, wifi.py
Here is the code of the individual artifacts and their directory where it is located in the autosec framework:

----------------------------------------------------
CODE_OF_ARTIFACTS
----------------------------------------------------

Your task is to convert the following exploit code into a module for the autosec framework in several steps. This exploit code is decisive for the entire communication.
Exploit code:

----------------------------------------------------
EXPLOIT_CODE
----------------------------------------------------

More detailed instructions on the specific procedure will follow.
'''

    EXAMPLE_MODULE_CODE=read_file_content(example_module_path)

    CODE_OF_ARTIFACTS=load_all_artifacts(directory_of_artifacts)

    EXPLOIT_CODE = read_file_content(path_to_exploit_code)

    INITIAL_SYSTEM_CONTENT = INITIAL_SYSTEM_CONTENT.replace("EXAMPLE_MODULE_CODE", EXAMPLE_MODULE_CODE)
    INITIAL_SYSTEM_CONTENT = INITIAL_SYSTEM_CONTENT.replace("CODE_OF_ARTIFACTS", CODE_OF_ARTIFACTS)
    INITIAL_SYSTEM_CONTENT = INITIAL_SYSTEM_CONTENT.replace("EXPLOIT_CODE", EXPLOIT_CODE)

    return INITIAL_SYSTEM_CONTENT


def load_all_artifacts(directory_of_artifacts: str) -> str:
    SEPARATOR = "************************************************************************************"
    result = ""
    files = find_all_files_with_specific_ending(base_directory=directory_of_artifacts, file_ending="py")
    i = 0
    for filename in files:
        result = result + "\n" + SEPARATOR + "\nfilename: " + filename + "\n" + SEPARATOR + "\n" + read_file_content(filename) + "\n" + SEPARATOR + "\n\n\n"
        i += 1
    print(f"Loaded {i} artifacts.")
    return result

